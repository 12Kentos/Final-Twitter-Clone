import CommentModal from "@/components/CommentModal";
import Sidebar from "@/components/Sidebar";
import Widgets from "@/components/Widgets";
import Post from "@/components/Post";
import { ArrowLeftIcon } from "@heroicons/react/24/solid";
import Head from "next/head";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import { db } from "@/firebase";
import {
  collection,
  doc,
  onSnapshot,
  orderBy,
  query,
} from "firebase/firestore";
import Comment from "@/components/Comment";
import { AnimatePresence, motion } from "framer-motion";

export default function PostPage({ newsResults, randomUsersResults }) {
  const router = useRouter();
  const { id } = router.query;
  const [userPost, setUserPost] = useState();
  const [comments, setComments] = useState([]);
  const [commentsNumber, setCommentsNumber] = useState(6);

  // Get the post data

  useEffect(() => {
    onSnapshot(doc(db, "posts", id), (snapshot) => setUserPost(snapshot));
  }, [db, id]);

  // Get comments of the post

  useEffect(() => {
    onSnapshot(
      query(
        collection(db, "posts", id, "comments"),
        orderBy("timestamp", "desc")
      ),
      (snapshot) => setComments(snapshot.docs)
    );
  }, [db, id]);

  return (
    <>
      <Head>
        <title>Post Page</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main
        className={`flex min-h-screen max-w-screen-xl mx-auto ${
          commentsNumber > 6 ? "" : "items-start"
        }`}
      >
        {/* Sidebar */}
        <Sidebar />

        {/* Feed */}

        <div className="border-l border-r xl:min-w-[576px] flex-grow max-w-2xl border-gray-200 justify-center flex flex-col mr-2">
          <div className="flex py-2 px-3 sticky top-0 z-50 bg-white border-b border-gray-200 items-center space-x-2">
            <div className="hoverEffect" onClick={() => router.push(`/`)}>
              <ArrowLeftIcon className="h-6" />
            </div>
            <h2 className="text-lg sm:text-xl font-bold cursor-pointer">
              Tweet
            </h2>
          </div>

          <Post id={id} post={userPost} />

          <AnimatePresence>
            {comments.length > 0 && (
              <>
                {comments.slice(0, commentsNumber).map((comment) => (
                  <motion.div
                    key={comment.id}
                    initial={{ opacity: 0 }}
                    animate={{ opacity: 1 }}
                    exit={{ opacity: 0 }}
                    transition={{ duration: 1 }}
                  >
                    <Comment
                      key={comment.id}
                      commentId={comment.id}
                      originalPostId={id}
                      comment={comment.data()}
                      number={commentsNumber}
                    />
                  </motion.div>
                ))}
              </>
            )}
          </AnimatePresence>
          {comments.length >= commentsNumber ? (
            <button
              className="text-sky-500 pl-4 pb-3 hover:text-sky-600 mt-5 border-b border-gray-200"
              onClick={() => setCommentsNumber(commentsNumber + 6)}
            >
              Show more
            </button>
          ) : (
            <div className="text-sky-500 pl-4 pb-3 mt-5 border-b border-gray-200 text-center">
              There are no more posts to be shown
            </div>
          )}
        </div>

        {/* Widgets */}
        <Widgets
          newsResults={newsResults.articles}
          randomUsersResults={randomUsersResults.results}
        />

        {/* Modal */}
        <CommentModal />
      </main>
    </>
  );
}

// https://saurav.tech/NewsAPI/top-headlines/category/business/us.json

export async function getServerSideProps() {
  // News results section
  const newsResults = await fetch(
    "https://saurav.tech/NewsAPI/top-headlines/category/science/us.json"
  ).then((res) => res.json());

  // who to follow section
  const randomUsersResults = await fetch(
    "https://randomuser.me/api/?results=50&inc=name,login,picture"
  ).then((res) => res.json());

  return {
    props: {
      newsResults,
      randomUsersResults,
    },
  };
}
